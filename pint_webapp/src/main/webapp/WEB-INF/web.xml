<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
	<!-- context-params -->
	<!-- max size of the upload request -->
	<context-param>
		<param-name>maxSize</param-name>
		<param-value>2147483647</param-value> <!-- 2Gb -->
	</context-param>
	<context-param>
		<param-name>maxFileSize</param-name>
		<param-value>2147483647</param-value> <!-- 2Gb -->
	</context-param>

	<context-param>
		<!-- Useful in development mode to slow down the uploads in fast networks.
         Put the number of milliseconds to sleep in each block received in the server.
         false or 0, means don't use slow uploads  -->
		<param-name>slowUploads</param-name>
		<param-value>0</param-value>
		<!--    		<param-value>200</param-value> -->
	</context-param>

	<!--  Local storage of files on production server -->
	<context-param>
		<param-name>projectFilesPathServer</param-name>
		<!-- DO NOT CHANGE -->
		<param-value>/home/salvador/PInt</param-value>
		<!--  change to your server path -->
	</context-param>

	<!-- Local storage of files on testing server/computer. -->
	<!-- The testing server machine must have the environment variable PINT_DEVELOPER = true -->
	<context-param>
		<param-name>projectFilesPath</param-name>
		<!-- DO NOT CHANGE -->
		<param-value>C:\Users\Salva\Desktop\tmp\PInt</param-value>
		<!-- change to your testing server path -->
	</context-param>
	
	<!-- This boolean property will determine if the uniprot annotations stored in the server (at $projectFilesPathServer/uniprot folder) will be indexed or not -->
	<!-- If you change this property after having some annotations, the proper server functioning is not assured -->
	<context-param>
		<param-name>indexUniprotAnnotations</param-name>
		<param-value>true</param-value>
		<!-- possible values: true or false -->
	</context-param>

	<!-- Remote access to OMIM database is controlled by a personal API KEY. In order to use the service, state here your OMIM API KEY -->
	<!-- For requesting a new one, go to http://www.omim.org/api -->
	<context-param>
		<param-name>OMIM_API_KEY</param-name>
		<param-value>nUQ7nH12QW6GxlhZk4bu1g</param-value>
		<!--  include here your API key -->
	</context-param>

	<!--  First time projects are loaded in the system, depending on their size, they can take some minutes -->
	<!--  to optimize the loading time, projects can be preloaded in cache -->
	<!--   -->
	<!-- set to true if you want to pre load the public projects when server starts -->
	<context-param>
		<param-name>preLoadPublicProjects</param-name>
		<param-value>false</param-value>
		<!--  true or false -->
	</context-param>

	<!-- list of projects regardless of whether they are public or not that you want to pre load when server starts -->
	<context-param>
		<param-name>projectsToPreLoad</param-name>
		<param-value>_CFTR_</param-value>
		<!-- 		<param-value>_CFTR_,frm_silam,PALM,VX809</param-value>	 value of the project tag, separated by commas -->
	</context-param>

	<!-- list of projects regardless of the previous properties that are not going to be preloaded in anycase -->
	<context-param>
		<param-name>projectsToNotPreLoad</param-name>
		<param-value>fmr_silamtest,VX809test,Offgel,CFTR_Scramble,CFTR_Scramble2,CFTR_Scramble3,CFTR_Scramble6,CFTR_Scramble7,CFTR_Scramble8</param-value>
		<!--  value of the project tag, separated by commas -->
	</context-param>


	<!-- Filters -->
	<filter>
		<filter-name>hibernateFilter</filter-name>
		<display-name>hibernateFilter</display-name>
		<filter-class>edu.scripps.yates.server.filter.HibernateFilter</filter-class>
	</filter>

	<filter>
		<filter-name>exceptionFilter</filter-name>
		<display-name>exceptionFilter</display-name>
		<filter-class>edu.scripps.yates.server.filter.ExceptionFilter</filter-class>
	</filter>

	<!-- filter mappings -->
	<!-- use hibernateFilter in all requests -->
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>

	<!--  filter to print stackTrace of unhandled exceptions  -->
	<filter-mapping>
		<filter-name>exceptionFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>


	<!-- listeners -->
	<listener>
		<listener-class>edu.scripps.yates.server.daemon.PintServerDaemon</listener-class>
	</listener>

	<!-- Servlets -->
	<!-- Servlet serving data to client -->
	<servlet>
		<servlet-name>pintServlet</servlet-name>
		<servlet-class>edu.scripps.yates.server.ProteinRetrievalServicesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>downloadServlet</servlet-name>
		<servlet-class>edu.scripps.yates.server.FileDownloadServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>ProjectSaverService</servlet-name>
		<servlet-class>edu.scripps.yates.server.ProjectSaverServiceImpl</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>ImportWizard</servlet-name>
		<servlet-class>edu.scripps.yates.server.ImportWizardServiceServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>xmlProjectUploadServlet</servlet-name>
		<!-- This is the default servlet, it puts files in session -->
		<!--     	<servlet-class>gwtupload.server.UploadServlet</servlet-class> -->
		<servlet-class>edu.scripps.yates.server.upload.XmlProjectUploadServlet</servlet-class>
	</servlet>

	<servlet>
		<!--     	<servlet-name>uploadServlet</servlet-name> -->
		<servlet-name>dataFilesUploadServlet</servlet-name>
		<!-- This is the default servlet, it puts files in session -->
		<!--     	<servlet-class>gwtupload.server.UploadServlet</servlet-class> -->
		<servlet-class>edu.scripps.yates.server.upload.DataFilesUploadServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>remoteLoggingServiceImpl</servlet-name>
		<servlet-class>com.google.gwt.libideas.logging.server.RemoteLoggingServiceImpl</servlet-class>	
	</servlet>

	<servlet>
		<servlet-name>ReactomeRESTfulAPI</servlet-name>
		<servlet-class>uk.ac.ebi.pride.web.util.servlet.proxy.ProxyServlet</servlet-class>
		<init-param>
			<param-name>proxyHost</param-name>
			<param-value>www.reactome.org</param-value>
		</init-param>
		<init-param>
			<param-name>proxyPort</param-name>
			<param-value>80</param-value>
		</init-param>
		<init-param>
			<param-name>proxyPath</param-name>
			<param-value>/</param-value>
		</init-param>
	</servlet>
	
	<servlet>
		<servlet-name>ReactomeFigures</servlet-name>
		<servlet-class>uk.ac.ebi.pride.web.util.servlet.proxy.ProxyServlet</servlet-class>
		<init-param>
			<param-name>proxyHost</param-name>
			<param-value>www.reactome.org</param-value>
		</init-param>
		<init-param>
			<param-name>proxyPort</param-name>
			<param-value>80</param-value>
		</init-param>
		<init-param>
			<param-name>proxyPath</param-name>
			<param-value>/figures</param-value>
		</init-param>
	</servlet>

	<servlet>
		<servlet-name>ReactomeAnalysis</servlet-name>
		<servlet-class>uk.ac.ebi.pride.web.util.servlet.proxy.ProxyServlet</servlet-class>
		<init-param>
			<param-name>proxyHost</param-name>
			<param-value>www.reactome.org</param-value>
		</init-param>
		<init-param>
			<param-name>proxyPort</param-name>
			<param-value>80</param-value>
		</init-param>
		<init-param>
			<param-name>proxyPath</param-name>
			<param-value>/AnalysisService</param-value>
		</init-param>
	</servlet>
	
	<!-- servlet-mappings -->
	<servlet-mapping>
		<servlet-name>ReactomeRESTfulAPI</servlet-name>
		<url-pattern>/reactome/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ReactomeFigures</servlet-name>
		<url-pattern>/figures/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ReactomeAnalysis</servlet-name>
		<url-pattern>/reactome/AnalysisService/*</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>pintServlet</servlet-name>
		<url-pattern>/pint/proteins</url-pattern>
	</servlet-mapping>

	<!-- Servlet to download files from server  -->
	<servlet-mapping>
		<servlet-name>downloadServlet</servlet-name>
		<!--     <url-pattern>/download</url-pattern> -->
		<url-pattern>/pint/download</url-pattern>
	</servlet-mapping>

	<!-- Default page to serve -->
	<servlet-mapping>
		<servlet-name>ProjectSaverService</servlet-name>
		<url-pattern>/pint/projectsaver</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>ImportWizard</servlet-name>
		<url-pattern>/pint/importWizard</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>xmlProjectUploadServlet</servlet-name>
		<url-pattern>/xmlProject.gupld</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>dataFilesUploadServlet</servlet-name>
		<url-pattern>/dataFilesProject.gupld</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>remoteLoggingServiceImpl</servlet-name>
		<url-pattern>/pint/logging</url-pattern>
	</servlet-mapping>

	<!--  welcome-file-list -->
	<welcome-file-list>
		<welcome-file>Pint.html</welcome-file>
	</welcome-file-list>
</web-app>
