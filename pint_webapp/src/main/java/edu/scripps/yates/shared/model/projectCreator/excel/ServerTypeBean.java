//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB)
// Reference Implementation, vhudson-jaxb-ri-2.2-7
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2014.12.03 at 06:58:04 PM PST
//

package edu.scripps.yates.shared.model.projectCreator.excel;

import java.io.Serializable;

import edu.scripps.yates.client.gui.components.projectCreatorWizard.manager.HasId;
import edu.scripps.yates.shared.util.CryptoUtil;

public class ServerTypeBean implements Serializable, HasId {

	/**
	 *
	 */
	private static final long serialVersionUID = 2156432633635013974L;
	protected String id;
	protected String hostName;
	protected String userName;
	protected String password;

	/**
	 * Gets the value of the id property.
	 *
	 * @return possible object is {@link String }
	 *
	 */
	@Override
	public String getId() {
		return id;
	}

	/**
	 * Sets the value of the id property.
	 *
	 * @param value
	 *            allowed object is {@link String }
	 *
	 */
	public void setId(String value) {
		id = value;
	}

	/**
	 * Gets the value of the hostName property.
	 *
	 * @return possible object is {@link String }
	 *
	 */
	public String getHostName() {
		return hostName;
	}

	/**
	 * Sets the value of the hostName property.
	 *
	 * @param value
	 *            allowed object is {@link String }
	 *
	 */
	public void setHostName(String value) {
		hostName = value;
	}

	/**
	 * Gets the value of the userName property.
	 *
	 * @return possible object is {@link String }
	 *
	 */
	public String getUserName() {
		return userName;
	}

	/**
	 * Sets the value of the userName property.
	 *
	 * @param value
	 *            allowed object is {@link String }
	 *
	 */
	public void setUserName(String value) {
		userName = value;
	}

	/**
	 * Gets the value of the password property, after decrypting it.
	 *
	 * @return possible object is {@link String }
	 *
	 */
	public String getPassword() {

		String ret = CryptoUtil.decrypt(password);
		if (ret != null)
			return ret;
		// if null, is because it is not encrypted
		String encrypted = CryptoUtil.encrypt(password);
		String nonEncrypted = password;
		password = encrypted;
		return nonEncrypted;

	}

	/**
	 * Gets the value of the encrypted password.
	 *
	 * @return possible object is {@link String }
	 *
	 */
	public String getEncryptedPassword() {
		return password;
	}

	/**
	 * Sets the value of the password property, storing encrypting it before
	 * storing it
	 *
	 * @param password
	 *            allowed object is {@link String }
	 *
	 */
	public void setPassword(String password) {
		this.password = CryptoUtil.encrypt(password);
	}

	/**
	 * Sets the value of the password property as an encrypted string
	 *
	 * @param password
	 *            allowed object is {@link String }
	 *
	 */
	public void setEncryptedPassword(String encryptedPassword) {
		password = encryptedPassword;
	}

	public boolean isValid() {
		if (userName == null || "".equals(userName))
			return false;

		if (password == null || "".equals(password))
			return false;

		if (hostName == null || "".equals(hostName))
			return false;

		if (id == null || "".equals(id))
			return false;

		return true;
	}

	/*
	 * (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (obj instanceof ServerTypeBean) {
			ServerTypeBean server = (ServerTypeBean) obj;
			if (getId().equals(server.getId())) {
				if ((getHostName() == null && server.getHostName() == null) || getHostName() != null
						&& server.getHostName() != null && getHostName().equals(server.getHostName())) {
					if ((getPassword() == null && server.getPassword() == null) || getPassword() != null
							&& server.getPassword() != null && getPassword().equals(server.getPassword())) {
						if ((getUserName() == null && server.getUserName() == null) || getUserName() != null
								&& server.getUserName() != null && getUserName().equals(server.getUserName())) {
							return true;
						}
					}
				}
			}
		}
		return super.equals(obj);

	}
}
