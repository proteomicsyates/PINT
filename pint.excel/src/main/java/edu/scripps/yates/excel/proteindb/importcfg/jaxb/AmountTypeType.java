//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.02.18 at 09:46:51 AM PST 
//


package edu.scripps.yates.excel.proteindb.importcfg.jaxb;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for amountTypeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="amountTypeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="INTENSITY"/>
 *     &lt;enumeration value="NORMALIZED_INTENSITY"/>
 *     &lt;enumeration value="SPC"/>
 *     &lt;enumeration value="NSAF"/>
 *     &lt;enumeration value="AREA"/>
 *     &lt;enumeration value="XIC"/>
 *     &lt;enumeration value="dNSAF"/>
 *     &lt;enumeration value="EMPAI"/>
 *     &lt;enumeration value="EMPAI_COV"/>
 *     &lt;enumeration value="REGRESSION_FACTOR"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "amountTypeType")
@XmlEnum
public enum AmountTypeType {

    INTENSITY("INTENSITY"),
    NORMALIZED_INTENSITY("NORMALIZED_INTENSITY"),
    SPC("SPC"),
    NSAF("NSAF"),
    AREA("AREA"),
    XIC("XIC"),
    @XmlEnumValue("dNSAF")
    D_NSAF("dNSAF"),
    EMPAI("EMPAI"),
    EMPAI_COV("EMPAI_COV"),
    REGRESSION_FACTOR("REGRESSION_FACTOR");
    private final String value;

    AmountTypeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AmountTypeType fromValue(String v) {
        for (AmountTypeType c: AmountTypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
